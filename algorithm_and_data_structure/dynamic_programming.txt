# Breaking problems down

one of the most powerful techniques for solving problems is to break down
into smaller, more easily solved pieces.
Smaller problems are less overwhelming, and they permit us to focus on details
that are lost when we are studying the entire problem.

Dynamic programming typically removes one element from the problem, solve The
smaller problem, and then uses the solution to this smaller problem to add
back the element in the proper way.

Divide and conquer typically split the problem in half, solves each half,
then stiches the halves back together to form a full solution.


Both of these technique are important to know about.
DP in particular is a misunderstood and underappreciated technique.

# Fibonacci number
F_n = F_(n-1) + F_(n-2)

base case:
F_0 = 0 , F_1 = 1

Fibonacci[n]

if (n=0) then return 0;
else if(n=1) then return 1;
else return (Fibonacci[n-1] + Fibonacci[n-2]);

